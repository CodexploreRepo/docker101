version: "3.8"
services:
  postgres:
    restart: always
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    expose:
      - 5432
    networks:
      - docker_network
    volumes:
      - ./postgres/db_init:/docker-entrypoint-initdb.d/
      - postregs_data:/var/lib/postgresql/data

  mysql:
    build: ./mysql/
    restart: always
    image: mysql
    container_name: mysql
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    expose:
      - "${DB_PORT}"
    networks:
      - docker_network
    volumes:
      - mysql_data:/var/lib/mysql
  pythonapp:
    build: ./python/
    image: python_sql_connector
    container_name: python_sql_connector
    command: sh -c "sleep 5s ; python3 ./db_connector.py"
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - POSTGRES_PORT=${POSTGRES_PORT}
    networks:
      - docker_network
    depends_on:
      - mysql
      - postgres
  adminer:
    image: adminer
    restart: always
    depends_on:
      - postgres
      - mysql
    ports:
      - 8080:8080
    networks:
      - docker_network
networks:
  docker_network:
    driver: bridge
volumes:
  mysql_data:
  postregs_data:
